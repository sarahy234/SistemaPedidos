@inject NavigationManager navigationManager
@inject PedidosService pedidosService
@inject TipoPedidoService tipoPedidoService
<h2></h2>
<EditForm Model="@oRegistroVentasCLS" OnValidSubmit="@guardar">


    <DataAnnotationsValidator />
    <div class="mt-3">
        <label>Numero de Empleado</label>
        <InputNumber readonly class="form-control" @bind-Value="oRegistroVentasCLS.Num_Empl" />
        <ValidationMessage For="(() => oRegistroVentasCLS.Num_Empl)" />
    </div>


    <div class="mt-3">
        <label>Nombre</label>
        <InputText class="form-control" @bind-Value="oRegistroVentasCLS.Nombre" />
        <ValidationMessage For="(() => oRegistroVentasCLS.Nombre)" />
    </div>
    <div class="mt-3">
        <label>Edad</label>
        <InputNumber class="form-control" @bind-Value="oRegistroVentasCLS.Edad" />
        <ValidationMessage For="(() => oRegistroVentasCLS.Edad)" />
    </div>
    <div class="mt-3">
        <label>Cargo</label>
        <InputText class="form-control" @bind-Value="oRegistroVentasCLS.Cargo" />
        <ValidationMessage For="(() => oRegistroVentasCLS.Cargo)" />
    </div>

    <div class="mt-3">
        <label>Seleccione Sucursal</label>
        <InputSelect class="form-control" @bind-Value="oRegistroVentasCLS.idSucursal">
            <option value="0">--Seleccione--</option>
            @foreach (var item in listaTipoPedido)
            {
                <option value="@item.idtiposucursal">@item.nombretiposucursal</option>
            }
        </InputSelect>
        <ValidationMessage For="(() => oRegistroVentasCLS.idSucursal)" />
    </div>
    <div class="mt-3">
        <label>Seleccione Director</label>
        <InputSelect class="form-control" @bind-Value="oRegistroVentasCLS.Director">
            <option value="0">--Seleccione--</option>
            @foreach (var item in listaTipoPedido)
            {
                <option value="@item.idtipodirector">@item.nombretipodirector</option>
            }
        </InputSelect>
        <ValidationMessage For="(() => oRegistroVentasCLS.Director)" />
    </div>

    <div class="mt-3">
        <label>Fecha de Contrato</label>
        <InputDate class="form-control" @bind-Value="oRegistroVentasCLS.FechaDeContrato" />
        <ValidationMessage For="(() => oRegistroVentasCLS.FechaDeContrato)" />
    </div>


    <div class="mt-3">
        <label>Cuota</label>
        <InputNumber class="form-control" @bind-Value="oRegistroVentasCLS.Cuota" />
        <ValidationMessage For="(() => oRegistroVentasCLS.Cuota)" />
    </div>


    <div class="mt-3">
        <label>Ventas</label>
        <InputNumber class="form-control" @bind-Value="oRegistroVentasCLS.Ventas" />
        <ValidationMessage For="(() => oRegistroVentasCLS.Ventas)" />
    </div>

    <div class="mt-3">
        <button type="submit" class="btn btn-success">Guardar</button>
        <button @onclick="regresar" type="submit" class="btn btn-danger">Regresar</button>
    </div>

</EditForm>
@code {
    public RegistroVentasCLS oRegistroVentasCLS { get; set; } = new RegistroVentasCLS();
    [Parameter]
    public int num_Empl{ get; set; }
    public string nombre { get; set; } = "";
    public List<TipoPedidoCLS> listaTipoPedido { get; set; } = new List<TipoPedidoCLS>();
    protected override Task OnInitializedAsync()
    {
        listaTipoPedido = tipoPedidoService.listarTipoPedidos();
        if (num_Empl == 0) nombre = "agregar nombre";
        else {
            nombre = "editar nombre";
            oRegistroVentasCLS = pedidosService.recuperarPedidoPorId(num_Empl);
        }
        return base.OnInitializedAsync();
    }
    private void guardar()
    {
        if(nombre=="agregar nombre")
        {
            pedidosService.guardarPedido(oRegistroVentasCLS);
            navigationManager.NavigateTo("sistemapedidos1");
        }
    }
    private void regresar()
    {
        navigationManager.NavigateTo("/sistemapedidos1");
    }
    
}

